<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[个人blog工具-hexo使用流程]]></title>
    <url>%2F2019%2F03%2F31%2F%E4%B8%AA%E4%BA%BAblog%E5%B7%A5%E5%85%B7-hexo%E4%BD%BF%E7%94%A8%E6%B5%81%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[什么是HexoHexo是一个快速、简单的构建个人博客的框架。 如何安装Hexo要求的系统中安装了 Node.js Git 1234567891011# 1. 先安装git# 2. 安装node# a.先安装nvmcurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash# 或wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash# b. 安装好nvm以后，重启终端，然后运行下述命令nvm install stable# 3. 全局安装 hexo客户端工具npm install -g hexo-cli 配置Hexo 初始化工程目录并安装依赖包 12# 初始化博客主目录hexo init haha-blog &amp;&amp; cd haha-blog &amp;&amp; npm install 自定制配置文件 _config.yml 主要配置项： 123456789101112title: 哈哈哈哈 //博客名字subtitle: 卓宸小屋 //小标题可以写自己喜欢的话description: //博客描述author: fei //作者名字language: zh-Hans //语言（此处为简体中文）url: http://blog.jinchen.mobi //自己购买的域名网址（没有可不写）post_asset_folder: true //这个配置会在创建文章是同时创建一个目录，把所有文章引用的资源都放到该目录下theme: next //主题的名字deploy: type: git //使用git发布 repo: https://github.com/bluesky719/haha.github.io.git //刚刚创建的github仓库的地址 branch: master 安装并配置主题id(安装并配置主题)所有主题资源页 123456# 博客更目录下，克隆工程git clone https://github.com/theme-next/hexo-theme-next themes/next# 配置根目录下的 _config.yml 的字段 theme: next# 配置语言cd themes/next/languages &amp;&amp; rm default.yml &amp;&amp; ln -s zh_CN.yml default.yml 修改主题的配置文件 themes/next/_config.yml 1234567891011favicon: small: /images/favicon-16x16-next.png medium: /images/favicon-32x32-next.png apple_touch_icon: /images/apple-touch-icon-next.png safari_pinned_tab: /images/logo.svgmenu: home: / || home about: /about/ || user tags: /tags/ || tags #categories: /categories/ || th archives: /archives/ || archive 使用流程123456789# 创建新文章 会在source/_posts创建一个文件名.md文件hexo new 新posthexo new draft 新草稿# 查看效果hexo s# 发布到githubhexo clean &amp;&amp; hexo g &amp;&amp; hexo d 博客中插入素材(图片，音乐)插入图片 首先在博客根目录下配置文件 _config.yml 中配置字段 post_asset_folder:true 使用 hexo new ‘new’ 创建新博客的时候，会在source/_posts里面创建.md文件的同时生成一个相同的名字的文件夹。把该文章中需要使用的图片放在该文件夹下即可。使用的时候 1234&#123;% asset_img "algo.png" "测试的 算法图片" %&#125;&#123;% asset_path slug %&#125;&#123;% asset_img slug [title] %&#125;&#123;% asset_link slug [title] %&#125; 插入音乐可以使用网易云音乐，搜索想要的歌曲，点击歌曲名字进入播放器页面，点击生成外链播放器；复制代码，直接粘贴到博文中即可。这样会显示一个网易的播放器，可以把 12&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=298 height=52 src="http://music.163.com/outchain/player?type=2&amp;id=32192436&amp;auto=1&amp;height=32"&gt;&lt;/iframe&gt;//其中的width=298 height=52 均改为0就看不到了，依然可以播放音乐 增加评论开启 Valine 注册Leancloud 注册完以后需要创建一个应用，名字可以随便起，然后 进入应用-&gt;设置-&gt;应用key 获取你的appid 和 appkey 拿到你的appid和appkey之后，打开主题配置文件 搜索 valine，填入appid 和 appkey 记得在Leancloud -&gt; 设置 -&gt; 安全中心 -&gt; Web 安全域名 把你的域名加进去 添加标签页和我的信息页面在 安装并配置主题 12hexo new page tagshexo new page about]]></content>
  </entry>
  <entry>
    <title><![CDATA[go中的并发模型]]></title>
    <url>%2F2018%2F06%2F23%2Fgo%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E6%A8%A1%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[理论基础CSP模型 每个进程按照串形方式编码 进程间的数据通过channel来通讯，不共享 go中并发工具集合go routineschannels]]></content>
  </entry>
  <entry>
    <title><![CDATA[hyperledger composer学习一]]></title>
    <url>%2F2018%2F06%2F13%2Fcomposer%E5%AD%A6%E4%B9%A0%E4%B8%80%2F</url>
    <content type="text"><![CDATA[源视频，请科学上网 一. 什么是Hyperledger Composer官方定义：Hyperledger Composer is an extensive, open development toolset and framework to make developing blockchain applications easier. Our primary goal is to accelerate time to value, and make it easier to integrate your blockchain applications with the existing business systems. You can use Composer to rapidly develop use cases and deploy a blockchain solution in weeks rather than months. Composer allows you to model your business network and integrate existing systems and data with your blockchain applications.原文链接 个人理解： Hyperledger Composer是有IBM推出的，一套开源的基于 Hyperledger的区块链业务解决方案，包括开发工具集和框架。 它是业务导向的。它从业务逻辑中抽象出三个基本概念： Assets(资产)：资产类似于传统物联网的model，是有有形或者无形的货品，服务或财产等等 Participants(参与者)：整个网络的参与者 Transactions(交易)：资产的操作 二. Hyperledger Composer安装开发安装工具： Git Python XCode Docker nvm Node npm VS Code：链码编辑器，记得安装Hyperledger Composer插件 123456#安装composer开发工具集npm install -g composer-clinpm install -g generator-hyperledger-composernpm install -g composer-rest-servernpm install -g yonpm install -g composer-playground 安装完毕，接下来操作Docker重置环境： 1234#清除docker环境docker kill $(docker ps -q)docker rm $(docker ps -aq)docker rmi $(docker images dev-* -q) 安装fabric-tools工具集 123456789#到工作目录cd workdirmkdir ~/fabric-dev-servers &amp;&amp; cd ~/fabric-dev-serverscurl -O https://raw.githubusercontent.com/hyperledger/composer-tools/master/packages/fabric-dev-servers/fabric-dev-servers.tar.gztar -xvf fabric-dev-servers.tar.gzcd ~/fabric-dev-servers./downloadFabric.sh 相关操作 1234567cd ~/fabric-dev-servers#启动fabric网络./startFabric.sh#创建admin访问卡./createPeerAdminCard.sh#开启playgroundcomposer-playground 注意: 如果是部署阿里云服务器，运行fabric网络会有问题，解决方案: 1234#打开域名解析文件vi /etc/resolv.conf#注释行#options timeout:2 attempts:3 rotate single-request-reopen]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F06%2F04%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
